---
import { getCollection } from 'astro:content'

const { pathname } = Astro.url
const allPosts = (await getCollection('posts')).sort(
  (a, b) => a.data.publishDate.getTime() - b.data.publishDate.getTime(),
)
const chapters = Object.groupBy(allPosts.filter(post => post.data.chapter), (post) => post.data.chapter || '')
---

<aside>
    <nav>
        <a href="/" aria-current={pathname === '/' ? 'page' : undefined}>Becoming Lumen</a>
        <br/>
        <div class="label">Chapters</div>
        {Object.entries(chapters).map(([chapter, posts]) => {
            const chapterSlug = '/' + chapter.toLowerCase().replaceAll(' ', '-')
            const isChapterActive = pathname.startsWith(chapterSlug)

            if(isChapterActive){
                return <>
                    <div class="navLink">{chapter}</div>
                    <div class="activeChapter">
                        {posts?.map(post => <a href={chapterSlug + post.data.slug} aria-current={pathname === chapterSlug + post.data.slug ? 'page' : undefined} class="navLink">{post.data.title}</a>)}
                    </div>
                </>
            }

            return <a href={chapterSlug + posts?.[0].data.slug} class="navLink">{chapter}</a>
        })}
    </nav>
</aside>
