---
import { getCollection } from 'astro:content'

const pathname = Astro.url.pathname
const allPosts = (await getCollection('posts')).sort(
  (a, b) => a.data.publishDate.getTime() - b.data.publishDate.getTime(),
)
const chapters = Object.groupBy(allPosts.filter(post => post.data.chapter), (post) => post.data.chapter || '')
---

<aside>
    <!-- Debug info (remove after fixing) -->
    <div style="background: #f0f0f0; padding: 5px; font-size: 10px; margin-bottom: 10px;">
        Debug: pathname = "{pathname}"
    </div>
    <nav>
        <a href="/" aria-current={pathname === '/' ? 'page' : undefined}>Becoming Lumen</a>
        <br/>
        <div class="label">Chapters</div>
        {Object.entries(chapters).map(([chapter, posts]) => {
            const chapterSlug = '/' + chapter.toLowerCase().replaceAll(' ', '-')
            const isChapterActive = pathname.startsWith(chapterSlug)

            if(isChapterActive){
                return <>
                    <div class="navLink">{chapter}</div>
                    <div class="activeChapter">
                        {posts?.map(post => {
                            const postUrl = `${chapterSlug}${post.data.slug.startsWith('/') ? post.data.slug : '/' + post.data.slug}`
                            return <>
                                <a href={postUrl} aria-current={pathname === postUrl ? 'page' : undefined} class="navLink">{post.data.title}</a>
                                <small style="color: #666; font-size: 8px; display: block;">
                                    URL: {postUrl} | Match: {pathname === postUrl ? 'YES' : 'NO'}
                                </small>
                            </>
                        })}
                    </div>
                </>
            }

            const firstPostUrl = `${chapterSlug}${posts?.[0].data.slug.startsWith('/') ? posts?.[0].data.slug : '/' + posts?.[0].data.slug}`
            return <a href={firstPostUrl} class="navLink">{chapter}</a>
        })}
    </nav>
</aside>
